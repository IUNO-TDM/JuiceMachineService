swagger: '2.0'
info:
  version: 0.0.1
  title: tru-punsch
paths:
  /recipes:
    get:
      description: gets all recipes
      parameters:
        - name: after
          in: query
          description: createdDate
          required: false
          type: string
        - name: machine
          in: query
          description: machine type
          required: false
          type: string
        - name: ingredients
          in: query
          description: array of possible ingredients
          type: array
          items:
            type: string
      responses:
        '200':
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Recipe'
    post:
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Recipe'
      responses:
        '201':
          description: Operation successful
          headers:
            location:
              description: The path to the projector
              type: string
  '/recipes/{recipeId}':
    get:
      description: gets one recipes
      parameters:
        - name: recipeId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Recipe'
    put:
      parameters:
        - name: recipeId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Recipe'
      responses:
        '200':
          description: Successful response
    delete:
      parameters:
        - name: recipeId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /request:
    post:
      description: The place to post a request to and get a ref to a offer
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Request'
      responses:
        '201':
          description: Operation successful
          headers:
            location:
              description: The path to the offer (offerId)
              type: string
  '/offers/{offerId}':
    get:
      description: After posting a request one can get here a offer
      parameters:
        - name: offerId
          in: path
          type: string
          required: true
      responses:
        '102':
          description: Offer not yet ready. It will be ready in a moment
        '200':
          description: Offer available
          schema:
            $ref: '#/definitions/Offer'
        '404':
          description: The offer could not be found
        '500':
          description: Something went wrong with the request
          schema:
            type: string
  '/offers/{offerId}/payment':
    post:
      description: >-
        the way to send the message, that the payment has been sent by the
        client
      parameters:
        - name: offerId
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Payment'
      responses:
        '200':
          description: Operation Successfull
        '400':
          description: bad request
  '/licences/{hsmId}':
    get:
      description: >-
        Gets a license update for an HSM if available, maybe opened as
        websocket?!
      parameters:
        - in: path
          name: hsmId
          required: true
          type: string
        - in: query
          name: rauId
          description: the id of the newesr RAU file the client has
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/License'
        '204':
          description: 'No Data, because there was no new RAU for this HSM'
        '404':
          description: This HSM is unknown
  /users:
    get:
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  '/users/{userId}':
    get:
      parameters:
        - in: path
          name: userId
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
definitions:
  License:
    type: object
    properties:
      rauString:
        type: string
        format: byte
      offers:
        description: The Offer Ids which are included in this license update
        type: array
        items:
          type: string
  Price:
    type: object
    properties:
      amount:
        type: number
        format: double
      currency:
        type: string
  Request:
    type: object
    properties:
      items:
        type: array
        items:
          type: object
          properties:
            recipeId:
              type: string
            amount:
              type: integer
      hsmId:
        type: string
  Offer:
    type: object
    properties:
      id:
        type: string
      request:
        $ref: '#/definitions/Request'
      paymentRequestBIP70:
        type: string
        format: byte
  Payment:
    type: object
    properties:
      paymentBIP70:
        type: string
        format: byte
  Rating:
    type: object
    properties:
      value:
        type: number
      min:
        type: number
      max:
        type: number
      count:
        type: number
  User:
    type: object
    properties:
      id:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      email:
        type: string
      thumbnail:
        type: string
        description: The Thumbnail jpg in base64
      imageRef:
        type: string
        description: The reference to the image
  Recipe:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      description:
        type: string
      licensefee:
        $ref: '#/definitions/Price'
      thumbnail:
        type: string
        format: byte
        description: The Thumbnail jpg in base64
      imageRef:
        type: string
        description: The reference to the image
      authorId:
        type: string
      createdAt:
        type: string
        format: date
      updatedAt:
        type: string
        format: date
      rating:
        $ref: '#/definitions/Rating'
      retailPrice:
        $ref: '#/definitions/Price'
      productId:
        type: string
      program:
        type: string
  Program:
    type: object
    properties:
      id:
        type: string
      lines:
        type: array
        items:
          type: object
          properties:
            components:
              type: array
              items:
                type: object
                properties:
                  ingredient:
                    type: string
                  amount:
                    description: Amount in ml
                    type: number
                    format: double
            timing:
              type: integer
              default: 0
              description: |-
                0: machine can decide, 1: all ingredients as fast as possible,
                 2: all beginning as early as possible and end with the slowest together, 3: one after the other
              enum:
                - 0
                - 1
                - 2
                - 3
            sleep:
              type: integer
              description: the sleep time after the line in ms
              default: 0
