{
  "swagger": "2.0",
  "info": {
    "version": "0.1.2",
    "title": "JuiceMachineService"
  },
  "paths": {
    "/recipes": {
      "get": {
        "description": "Retrieves a list of recipes from the server. The list is filtered by the given query parameters. Only recipes are returned, that can be produced by the specified ingredients.",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "THIS PARAMETER IS CURRENTLY NOT BEEING USED",
            "required": false,
            "type": "string"
          },
          {
            "name": "machine",
            "in": "query",
            "description": "THIS PARAMETER IS CURRENTLY NOT BEEING USED",
            "required": false,
            "type": "string"
          },
          {
            "name": "ingredients",
            "in": "query",
            "description": "Array with ingredient ids for possible ingredients. Only recipes are returned that can be produced by the given ingredients.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true,
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipe"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recipes/{recipeId}": {
      "get": {
        "description": "Retrieves the recipe data for a given recipe id",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "404": {
            "description": "No recipe for given id found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recipes/{recipeId}/image": {
      "get": {
        "description": "The image for a specific recipe",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format" : "byte"
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    },
    "/offers": {
      "post": {
        "description": "Submits a request for a new offer",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfferRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Operation successful",
            "headers": {
              "location": {
                "description": "The path to the offer (offerId)",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/offers/{offerId}": {
      "get": {
        "description": "Retrieves the offer data for a given offer id",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "okay",
            "schema": {
              "$ref": "#/definitions/Offer"
            }
          },
          "404": {
            "description": "The offer could not be found"
          },
          "500": {
            "description": "Something went wrong with the request"
          }
        }
      }
    },
    "/offers/{offerId}/payment": {
      "post": {
        "description": "THIS ROUTE IS DEPRECTED AND WILL BE DELETED. DO NOT USE IT.",
        "parameters": [
          {
            "name": "offerId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful"
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description" : "Retrieves the user data for a given user id.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "This user is unknown"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{userId}/image": {
      "get": {
        "description" : "Get the profile image for a specific user.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format" : "byte"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Price": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "OfferRequest": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "recipeId": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        },
        "hsmId": {
          "type": "string"
        }
      }
    },
    "Offer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "invoice": {
          "$ref": "#/definitions/Invoice"
        }
      }
    },
    "Invoice" :{
      "type": "object",
      "properties": {
        "expiration": {
          "type": "string",
          "format": "date"
        },
        "transfers": {
          "$ref": "#/definitions/Transfer"
        }
      }
    },
    "Transfer" :{
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "coin": {
          "type": "number"
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "paymentBIP70": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Rating": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "max": {
          "type": "number"
        },
        "count": {
          "type": "number"
        }
      }
    },
    "Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "licensefee": {
          "$ref": "#/definitions/Price"
        },
        "thumbnail": {
          "type": "string",
          "format": "byte",
          "description": "The Thumbnail jpg in base64"
        },
        "imageRef": {
          "type": "string",
          "description": "The reference to the image"
        },
        "authorId": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "updatedAt": {
          "type": "string",
          "format": "date"
        },
        "rating": {
          "$ref": "#/definitions/Rating"
        },
        "retailPrice": {
          "$ref": "#/definitions/Price"
        },
        "productId": {
          "type": "string"
        },
        "program": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string",
          "description": "The Thumbnail jpg in base64"
        },
        "imageRef": {
          "type": "string",
          "description": "The reference to the image"
        }
      }
    },
    "Program": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ingredient": {
                      "type": "string"
                    },
                    "amount": {
                      "description": "Amount in ml",
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              },
              "timing": {
                "type": "integer",
                "default": 0,
                "description": "0: machine can decide, 1: all ingredients as fast as possible,\n 2: all beginning as early as possible and end with the slowest together, 3: one after the other",
                "enum": [
                  0,
                  1,
                  2,
                  3
                ]
              },
              "sleep": {
                "type": "integer",
                "description": "the sleep time after the line in ms",
                "default": 0
              }
            }
          }
        }
      }
    }
  }
}